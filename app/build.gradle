import dependencies.Dependencies
import dependencies.TestsDependencies
import dependencies.AndroidTestDependency
import dependencies.CoreDependency


plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.rezapour.officemanager'
    compileSdk 33

    defaultConfig {
        applicationId "com.rezapour.officemanager"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        buildConfigField("String", "API_USER",localProperties['apiUser'])
        buildConfigField("String", "API_PASSWROD",localProperties['apiPassword'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        buildConfig = true
    }
}

dependencies {

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation CoreDependency.core_ktx
    implementation CoreDependency.activity_component
    implementation platform(CoreDependency.compose_bom)
    implementation CoreDependency.compose_ui
    implementation CoreDependency.compose_ui_graphics
    implementation CoreDependency.compose_ui_tooling_preview
    implementation CoreDependency.compose_material3
    debugImplementation CoreDependency.compose_ui_tooling
    debugImplementation CoreDependency.compose_ui_test_manifest

    //AndroidTest
    androidTestImplementation AndroidTestDependency.jUnit
    androidTestImplementation AndroidTestDependency.espresso_core
    androidTestImplementation platform(AndroidTestDependency.compose_bom)
    androidTestImplementation AndroidTestDependency.ui_test_junit4

    //Test
    testImplementation TestsDependencies.core_testing
    testImplementation TestsDependencies.junit
    testImplementation TestsDependencies.thruth
    testImplementation TestsDependencies.turbine
    testImplementation TestsDependencies.mockwebserver
    testImplementation TestsDependencies.coroutine_test
    testImplementation TestsDependencies.mokito_kotlin

    //hilt
    implementation Dependencies.hilt_android
    kapt Dependencies.dagger_hilt_compiler

    //fragment
    implementation Dependencies.fragment_ktx


    //retrofit
    implementation Dependencies.retrofit
    implementation Dependencies.converter_gson

    //okhttp
    implementation Dependencies.okhttp
    implementation Dependencies.logging_interceptor

    //coroutine
    implementation Dependencies.kotlinx_coroutines_core
    implementation Dependencies.kotlinx_coroutines_android

    // navigation
    implementation Dependencies.navigation_fragment_ktx
    implementation Dependencies.navigation_ui_ktx

    //glide
    implementation Dependencies.glide
    annotationProcessor Dependencies.glide_compiler

    //room
    implementation Dependencies.room_runtime
    kapt Dependencies.room_compiler
    implementation Dependencies.room_runtime_ktx
    implementation Dependencies.room_paging

    implementation Dependencies.glide_compose

    //navigation
    implementation Dependencies.navigation_compose
    implementation Dependencies.hilt_navigation_compose

    //viewmodel
    implementation Dependencies.viewmodel_compose
}